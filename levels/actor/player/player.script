
function init(self)
	self.id = go.get_parent()
	msg.post(".", "acquire_input_focus")
	msg.post(self.id,"msg_controler_init",{player = true})
	
	self.camera_follow = true
	-- msg.post("camera", "follow")
	self.input_dir = vmath.vector3()
	self.spd = 8
end

function final(self)
	msg.post("camera","unfollow")
end

function update(self, dt)

	if self.input_dir ~= vmath.vector3() then
		
		msg.post(self.id, "move_msg", {vec = self.input_dir,spd = self.spd})

		self.input_dir = vmath.vector3()
	end	 

	if self.mouse_pos then
		msg.post(self.id, "rotation_msg", {vec = self.mouse_pos})
	end

	if self.camera_follow then
		-- msg.post("camera","set_rotation",{rot = go.get_rotation(".")})
		msg.post("/camera","set_position",{pos = go.get_position("actor")})
	end
	

	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)

	if action_id == hash("left") then
		self.input_dir.x = self.input_dir.x-1 
	elseif action_id == hash("right") then
		self.input_dir.x = self.input_dir.x+1 
	elseif action_id == hash("up") then
		self.input_dir.y = self.input_dir.y+1 
	elseif action_id == hash("down") then
		self.input_dir.y = self.input_dir.y-1 
	end

	if action_id == hash("mouse_left") then
		msg.post("actor#actor","shot_msg")
	elseif action_id == hash("mouse_right") then
		msg.post("actor#actor","dash_msg")
	end

	local pos =  vmath.vector3(action.x, action.y, 0)
	local camera = go.get_position(self.id)-vmath.vector3(480, 320, 0)
	self.mouse_pos = pos+camera

	local text = ("x: %d y: %d"):format(pos.x, pos.y)
	-- print(text)
	-- print(action_id)
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
